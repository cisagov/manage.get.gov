# Generated by Django 4.2.20 on 2025-10-08 17:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("registrar", "0157_alter_portfolio_requester"),
    ]

    operations = [
        migrations.CreateModel(
            name="DnsAccount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DnsRecord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DnsVendor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(choices=[("cloudflare", "Cloudflare")], max_length=50)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DnsZone",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "domain",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="registrar.domain",
                    ),
                ),
                (
                    "dns_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="zones", to="registrar.dnsaccount"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VendorDnsRecord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("x_record_id", models.CharField(max_length=50)),
                ("x_created_at", models.DateTimeField()),
                ("x_updated_at", models.DateTimeField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VendorDnsZone",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("x_zone_id", models.CharField(max_length=50)),
                ("x_created_at", models.DateTimeField()),
                ("x_updated_at", models.DateTimeField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VendorDnsAccount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("x_account_id", models.CharField(max_length=50)),
                ("x_created_at", models.DateTimeField()),
                ("x_updated_at", models.DateTimeField()),
                (
                    "dns_vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_accounts",
                        to="registrar.dnsvendor",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DnsZone_VendorDnsZone",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dns_zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="zone_link", to="registrar.dnszone"
                    ),
                ),
                (
                    "vendor_dns_zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zone_link",
                        to="registrar.vendordnszone",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="dnszone",
            name="vendor_dns_zone",
            field=models.ManyToManyField(
                related_name="zones", through="registrar.DnsZone_VendorDnsZone", to="registrar.vendordnszone"
            ),
        ),
        migrations.CreateModel(
            name="DnsRecord_VendorDnsRecord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dns_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="record_link",
                        to="registrar.dnsrecord",
                    ),
                ),
                (
                    "vendor_dns_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="record_link",
                        to="registrar.vendordnsrecord",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="dnsrecord",
            name="dns_zone",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="records", to="registrar.dnszone"
            ),
        ),
        migrations.AddField(
            model_name="dnsrecord",
            name="vendor_dns_record",
            field=models.ManyToManyField(
                related_name="records", through="registrar.DnsRecord_VendorDnsRecord", to="registrar.vendordnsrecord"
            ),
        ),
        migrations.CreateModel(
            name="DnsAccount_VendorDnsAccount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dns_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_link",
                        to="registrar.dnsaccount",
                    ),
                ),
                (
                    "vendor_dns_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_link",
                        to="registrar.vendordnsaccount",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="dnsaccount",
            name="vendor_dns_account",
            field=models.ManyToManyField(
                related_name="accounts",
                through="registrar.DnsAccount_VendorDnsAccount",
                to="registrar.vendordnsaccount",
            ),
        ),
    ]
