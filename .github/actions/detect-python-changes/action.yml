name: Detect Python changes
description: Outputs whether *.py files changed and their list
outputs:
  any:
    description: "true/false if any matched files changed"
    value: ${{ steps.detect.outputs.any }}
  list:
    description: "newline-separated list of changed *.py files"
    value: ${{ steps.detect.outputs.list }}
runs:
  using: "composite"
  steps:
    - name: Checkout (full history)
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - id: detect
      shell: bash
      run: |
        set -euo pipefail

        EVENT_NAME="${{ github.event_name }}"
        HEAD_SHA="${{ github.sha }}"
        PR_BASE_SHA="${{ github.event.pull_request.base.sha || '' }}"
        BEFORE_SHA="${{ github.event.before || '' }}"
        DEFAULT_BRANCH="${{ github.event.repository.default_branch || 'main' }}"

        # Figure out the diff range to compare
        if [ "$EVENT_NAME" = "pull_request"] && [ -n "$PR_BASE_SHA" ] 
        then
          BASE_SHA="$PR_BASE_SHA"
        # push (or manual)
        else
          # When there's no PR base to compare against. We prefer before/after.  
          BASE_SHA="$PR_BASE_SHA"
          if [ -z "$BASE_SHA" ] || [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ] 
          then
            # If it's the first push, no before. So... diff against merge-base with default branch
            git fetch origin "$DEFAULT_BRANCH" --depth=1
            BASE_SHA="$(git merge-base "origin/$DEFAULT_BRANCH" "$HEAD_SHA")"
          fi
        fi

        DIFF_RANGE="${BASE_SHA}...${HEAD_SHA}"

        # Get changed *.py files (A=added, C=copied, M=modified, R=renamed)
        git fetch --no-tags --prune origin "${BASE_SHA}:${BASE_SHA}" || true
        CHANGED=$(git diff --name-only --diff-filter=ACMR "${DIFF_RANGE}" | grep -E '\.py$' || true)

        # multi-line output
        echo "list<<EOF" >> GITHUB_OUTPUT
        echo "${CHANGED}" >> GITHUB_OUTPUT
        echo "EOF" >> GITHUB_OUTPUT

        if [ -n "$CHANGED"]
        then
          echo "any=true" >> "$GITHUB_OUTPUT"
          echo "Matched python files:"
          echo "$CHANGED"
        else
          echo "any=false" >> "$GITHUB_OUTPUT"
          echo "no *.py files changes matched"
        fi