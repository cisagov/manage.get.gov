name: Detect Python changes
description: Outputs whether *.py files changed and their list
outputs:
  any:
    description: "true/false if any matched files changed"
    value: ${{ steps.detect.outputs.any }}
  list:
    description: "newline-separated list of changed *.py files"
    value: ${{ steps.detect.outputs.list }}
runs:
  using: "composite"
  steps:
    - name: Checkout (full history)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
    
    - id: detect
      shell: bash
      run: |
        set -euo pipefail

        HEAD_SHA="${{ github.sha }}"
        DEFAULT_BRANCH="${{ github.event.repository.default_branch || 'main' }}"

        git fetch origin "${DEFAULT_BRANCH}:${DEFAULT_BRANCH}"

        BASE_SHA="$(git merge-base "origin/${DEFAULT_BRANCH}" HEAD)"
        
        echo "-------DEBUG (detector)--------"
        echo "BASE_SHA: ${BASE_SHA}, HEAD=$(git rev-parse HEAD)"
        git diff --name-status "${BASE_SHA}..HEAD"
        echo "-------------------------------"

        CHANGED_ALL="$(
          git diff --name-only --diff-filter=ACMRDT "${BASE_SHA}..${HEAD_SHA}" | tr -d '\r' | sort -u
        )"

        PY_CHANGED="$(printf '%s\n' "$CHANGED_ALL" | tr ' ' '\n' | grep -Ei '\.py$' || true)"
        # multi-line output
        echo "list<<EOF" >> GITHUB_OUTPUT
        echo "${PY_CHANGED}" >> GITHUB_OUTPUT
        echo "EOF" >> GITHUB_OUTPUT

        if [ -n "$PY_CHANGED"]
        then
          echo "any=true" >> "$GITHUB_OUTPUT"
          echo "Matched python files:"
          echo "$PY_CHANGED"
        else
          echo "any=false" >> "$GITHUB_OUTPUT"
        fi