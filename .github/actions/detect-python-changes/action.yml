name: Detect Python changes
description: Outputs whether *.py files changed and their list
outputs:
  any:
    description: "true/false if any matched files changed"
    value: ${{ steps.detect.outputs.any }}
  list:
    description: "newline-separated list of changed *.py files"
    value: ${{ steps.detect.outputs.list }}
runs:
  using: "composite"
  steps:
    - name: Checkout (full history)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
    
    - id: detect
      shell: bash
      run: |
        set -euo pipefail

        EVENT_NAME="${{ github.event_name }}"
        HEAD_SHA="$(git rev-parse HEAD)"
        DEFAULT_BRANCH="${{ github.event.repository.default_branch || 'main' }}"
        PR_BASE_REF="${{ github.event.before || '' }}"
        BEFORE_SHA="${{ github.event.before || '' }}"

        if [ "$EVENT_NAME" = "pull_request" ] && [ -n "$PR_BASE_REF" ]
        then
          git fetch --no-tags --prune --depth=1 origin "+refs/heads/${PR_BASE_REF}:refs/remotes/origin/${PR_BASE_REF}"

          echo "-------DEBUG (PR)--------"
          echo "HEAD: $HEAD_SHA"
          echo "PR_BASE_REF: $PR_BASE_REF"
          echo "DIFF: origin/${PR_BASE_REF}...HEAD"
          echo "-------------------------------"

          CHANGED_ALL="$(git diff --name-only --diff-filter=ACMRDT "origin/${PR_BASE_REF}...HEAD" | tr -d '\r' | sort -u)"
        else
          if [-z "$BEFORE_SHA" ] || [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000"]
          then
            git fetch --no-tags --prune --depth=1 origin "+refs/heads/${DEFAULT_BRANCH}:refs/remotes/origin/${DEFAULT_BRANCH}"
            BASE_SHA="$(git merge-base "origin/${DEFAULT_BRANCH}" "HEAD_SHA")"
            DIFF_RANGE="${BASE_SHA}..${HEAD_SHA}"
          else
            DIFF_RANGE="${BEFORE_SHA}..${HEAD_SHA}"
          fi
          echo "-------DEBUG (push) --------"
          echo "DIFF: $DIFF_RANGE"
          echo "----------------------------"
          
          CHANGED_ALL="$(git diff --name-only --diff-filter=ACMRDT $DIFF_RANGE | tr -d '\r' | sort -u)"
        fi
        
        echo "CHANGED_FILES (all):"
        echo '%s\n' "$CHANGED_ALL"

        PY_CHANGED="$(printf '%s\n' "$CHANGED_ALL" | grep -Ei '\.py$' || true)"
        
        # multi-line output
        echo "list<<EOF" >> "$GITHUB_OUTPUT"
        printf '%s\n' "$PY_CHANGED" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

        if [ -n "$PY_CHANGED" ]
        then
          echo "any=true" >> "$GITHUB_OUTPUT"
          echo "Matched python files:"
          echo "$PY_CHANGED"
        else
          echo "any=false" >> "$GITHUB_OUTPUT"
        fi